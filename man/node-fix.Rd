% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/node.R
\name{node-fix}
\alias{node-fix}
\alias{node_replace}
\alias{node_commit_edits}
\title{Change the code in the tree}
\usage{
node_replace(x, new_text)

node_commit_edits(x, edits)
}
\arguments{
\item{x}{A node, either from \code{\link[=tree_root]{tree_root()}} or from another \verb{node_*()}
function.}

\item{new_text}{The replacement for a node. One can use meta-variables used
in the previous step as a replacement.}

\item{edits}{A list of replacements (the output of \code{node_replace()}).}
}
\description{
\code{node_replace()} stores the replacement for a particular node, it doesn't
change the actual code. \code{node_commit_edits()} takes a list of replacements
(the output of \code{node_replace()}) and applies them one by one to the tree,
returning the modified code.
}
\examples{
src <- "x <- rnorm(100, mean = 2)
any(duplicated(y))
plot(mtcars)
any(duplicated(x))"

root <- src |>
  tree_new() |>
  tree_root()

node_to_fix <- root |>
  node_find(pattern = "any(duplicated($A))")

node_commit_edits(
  node_to_fix,
  node_to_fix |>
    node_replace(
      paste0("anyDuplicated(", node_text(node_get_match(node_to_fix, "A")), ") > 0")
    )
)
}
