% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/node.R
\name{node-info}
\alias{node-info}
\alias{node_matches}
\alias{node_inside}
\alias{node_has}
\alias{node_precedes}
\alias{node_follows}
\title{Get more precise information on a node}
\usage{
node_matches(
  x,
  pattern = NULL,
  kind = NULL,
  regex = NULL,
  inside = NULL,
  has = NULL,
  precedes = NULL,
  follows = NULL,
  all = NULL,
  any = NULL,
  not = NULL,
  matches = NULL
)

node_inside(x, m)

node_has(x, m)

node_precedes(x, m)

node_follows(x, m)
}
\arguments{
\item{x}{A node, either from \code{\link[=tree_root]{tree_root()}} or from another \verb{node_*()}
function.}

\item{pattern}{The pattern to search. This can contain meta-variables to
capture certain elements. Those meta-variables can then be recovered with
\code{\link[=node_get_match]{node_get_match()}} and \code{\link[=node_get_multiple_matches]{node_get_multiple_matches()}}. The meta-variables must
start with \code{$} and have only uppercase letters, e.g. \verb{$VAR}.}

\item{kind}{The kind of element to search, e.g \code{"while_statement"}.}

\item{regex}{A regular expression to match the node's text. The regex must
match the whole text of the node.}

\item{inside}{TODO.}

\item{has}{TODO.}

\item{precedes}{TODO.}

\item{follows}{TODO.}

\item{all}{TODO.}

\item{any}{TODO.}

\item{not}{TODO.}

\item{matches}{TODO.}
}
\description{
Get more precise information on a node
}
\examples{
src <- "
print('hi')
fn <- function() {
  print('hello')
}
"
root <- src |>
  tree_new() |>
  tree_root()

some_node <- root |>
  node_find(pattern = "print($A)")

node_text(some_node)

some_node |>
  node_get_match("A") |>
  node_matches(kind = "argument")
}
